---
title: "Class 5: Data Viz with ggplot"
author: "Jessica Gao (PID16939806)"
format: pdf
---

##Intro to ggplot

There are many graphics systems in R (ways to make plots and figures). These include "base" R plots. Today we will focus mostly on the **ggplot2** package.

Let's start with a plot of a simple in-built dataset called 'cars'.


```{r}
head(cars, n=10)
```

```{r}
plot(cars)
```

```{r}
nrow(cars)
```

Let's see how we can make this figure using **ggplot** First I need to install this package on my computer. To install any R package I use the function 'install.packages()'.

> I will run 'install.packages("ggplot2") in my R console not this quarto document!

Before I can use any functions from add on packages I need to load the package from my "library()" with the 'library(ggplot2)' call. 

```{r}
#install.packages("ggplot2")
library(ggplot2)
ggplot(cars)
```

All ggplot figures have at least 3 things (called layers). These include: 

- **data** (the input dataset I want to plot from),
- **aes** (the aesthetic mapping of the data to my plot),
- **geoms** (the geom_point(), geom_line() etc. that I want to draw).

```{r}
ggplot(cars)+
  aes(x=speed,y=dist)+
  geom_point()
```


Let's add a line to show the relationship here:
```{r}
ggplot(cars)+
  aes(x=speed,y=dist)+
  geom_point()+
  geom_smooth(method="lm", se=FALSE)+
  theme_bw()+
  labs(title="My first GGPLOT")

```
>Q1 Which geometric layer should be used to create scatter plots in ggplot2? 

geom_point()

> Q2. In your own RStudio can you add a trend line layer to help show the relationship between the plot variables with the geom_smooth() function?

geom_smooth(method="lm")

>Q3. Argue with geom_smooth() to add a straight line from a linear model without the shaded standard error region?

geom_smooth(method="lm", se=FLASE)

>Q4. Can you finish this plot by adding various label annotations with the labs() function and changing the plot look to a more conservative “black & white” theme by adding the theme_bw() function:

```{r}
ggplot(cars)+
  aes(x=speed,y=dist)+
  geom_point()+
  geom_smooth(method="lm", se=FALSE)+
  theme_bw()+
  labs(title="My first GGPLOT")
```


##Gene expression figure

The code to read the dataset

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

>How many genes are in this dataset? Use the nrow() function to find out how many genes are in this dataset. What is your answer?

```{r}
nrow(genes) #tells you how many rows there are
#each row is a gene, so knowing the number of row you know how many genes.
```
>Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?

```{r}
colnames(genes)
ncol(genes)

```


>Q. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer?

```{r}
table(genes$State)
```
127 genes are "up" regulated


>Q Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 

```{r}
round (table(genes$State)/nrow(genes), 2)
```
```{r}
n.tot <- nrow(genes)
vals <- table(genes$State)

vals.percent <- vals/n.tot*100
round(vals.percent, 2)
```


A first plot of this dataset

```{r}
ggplot(genes)+
  aes(x=Condition1, y=Condition2, col=State)+
  geom_point()+
  theme_bw()+
  labs(title="Gene Expression changes upon drug treatment", 
       x="Control Expression",
       y="Drug Pressence Expression") +
  scale_colour_manual(values=c("blue", "gray","red"))

```
```{r}
p <- ggplot(genes)+ aes(x=Condition1, y=Condition2, col=State) + geom_point()
p

```
```{r}
p + theme_minimal()
```

Section 7: Going Further**

```{r}
#install.packages("gapminder")
library(gapminder)
```

```{r}
#install.packages("dplyr")
library(dplyr)
```
>Q.Complete the code below to produce a first basic scater plot of this gapminder_2007 dataset:

```{r}
gapminder_2007 <- gapminder %>% filter(year==2007)
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point()
```

```{r}

ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point(alpha=0.5)
```
```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```
```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, color = pop) +
  geom_point(alpha=0.8)
```
**Section 7: Adjusting point size**

```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, size = pop) +
  geom_point(alpha=0.5)
```
```{r}
ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)
```

>Q. Can you adapt the code you have learned thus far to reproduce our gapminder scatter plot for the year 1957? What do you notice about this plot is it easy to compare with the one for 2007?

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)
ggplot(gapminder_1957)+
  aes(x=gdpPercap, y=lifeExp, size= pop, color=continent)+
  scale_size_area(max_size=15)+
  geom_point(alpha=0.7)

```

>Q. Do the same steps above but include 1957 and 2007 in your input dataset for ggplot(). You should now include the layer facet_wrap(~year) to produce the following plot:

```{r}
gapminder_both_years <- gapminder %>% filter(year==1957 | year==2007)
ggplot(gapminder_both_years)+
  aes(x=gdpPercap, y=lifeExp, size= pop, color=continent)+
  scale_size_area(max_size=15)+
  geom_point(alpha=0.7)+
  facet_wrap(~year)
```

**Section 10: Combining plots**

```{r}
#install.packages("patchwork")
library(patchwork)

# Setup some example plots 
scatter_plot <- ggplot(mtcars) + geom_point(aes(mpg, disp))
box_whisker_plot <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
curve_graph <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
bar_graph <- ggplot(mtcars) + geom_bar(aes(carb))

# Use patchwork to combine them here:
(scatter_plot | box_whisker_plot | curve_graph) /
      bar_graph
```

```{r}
sessionInfo()
```


